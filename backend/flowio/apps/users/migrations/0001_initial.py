# Generated by Django 5.1.3 on 2025-03-25 19:27

import apps.users.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('cards', '0001_initial'),
        ('roles', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('attachment', models.FileField(blank=True, default='attachments/user/default/user_default.png', null=True, upload_to=apps.users.models.user_attachment_path)),
                ('name', models.CharField(max_length=255)),
                ('surnames', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('activation_code', models.CharField(blank=True, max_length=5, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('registration_attempts', models.PositiveIntegerField(default=0)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cards', models.ManyToManyField(blank=True, related_name='get_users_cards', to='cards.card')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('role_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_users_role', to='roles.role')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='BlacklistedToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refresh_token', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_blacklisted_tokens_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'BlacklistedToken',
                'verbose_name_plural': 'BlacklistedTokens',
            },
        ),
    ]
